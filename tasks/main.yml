---
- name: include os specific vars
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_os_family }}.yml"
  tags:
    - always

- include_tasks:
    file: install.yml
    apply:
      tags:
        - influxdb
        - install
        - configure
  tags: [influxdb, install, configure]

- include_tasks:
    file: configure.yml
    apply:
      tags:
        - influxdb
        - configure
  tags: [influxdb, configure]

- name: Start the InfluxDB service
  service:
    name: influxdb
    state: restarted
    enabled: yes
  register: influxdb_started
  when: influxdb_start_service
  tags: [influxdb, configure]

- name: Wait for InfluxDB to come up
  wait_for:
    host: "{{ influxdb_bind_hostname | default(\"localhost\", true) }}"
    port: "{{ influxdb_http_port }}"
    delay: 5
    timeout: 30
  when: influxdb_started.changed and influxdb_start_service
  ignore_errors: yes
  register: influxdb_start_attempt
  tags: [influxdb, configure]

- name: Run tail on log
  command: tail /var/log/influxdb/influxd.log
  register: influxdb_tail_output
  when: influxdb_start_attempt.failed is defined and influxdb_start_attempt.failed == True
  tags: [influxdb, configure]

- name: Show log output
  debug:
    msg: "{{ influxdb_tail_output.stdout_lines }}"
  when: influxdb_start_attempt.failed is defined and influxdb_start_attempt.failed == True
  tags: [influxdb, configure]

- include_tasks:
    file: demo.yml
    apply:
      tags:
        - influxdb
        - demo
  tags: [influxdb, demo]
  when: influxdb_load_sample_data and influxdb_http_auth_enabled == "false" and influxdb_start_service

- include_tasks:
    file: verify.yml
    apply:
      tags:
        - influxdb
        - verify
  tags: [influxdb, verify]

- include_tasks:
    file: stress.yml
    apply:
      tags:
        - influxdb
        - stress
  tags: [influxdb, stress]

- include_tasks:
    file: prometheus.yml
    apply:
      tags:
        - prometheus
  tags: [prometheus]
